{"version":3,"sources":["redux/actions/index.js","components/TodoForm.js","components/DeleToggle.js","components/CalendarComponent.js","components/TogleCalend.js","components/MyData.js","components/Selected.js","App.js","redux/reducers/index.js","redux/reducers/SerVdataReducer.js","redux/reducers/SelectedList.js","index.js"],"names":["fetchData","dispatch","a","axios","get","response","type","payload","data","selectItem","item","TodoForm","props","state","task","handleTaskInputChange","bind","handleSubmit","e","this","setState","target","value","preventDefault","body","url","method","then","console","log","catch","className","Form","onSubmit","Input","placeholder","name","autoComplete","onChange","Button","React","Component","connect","dataFromServer","DeleToggle","useState","isOpen","setIsOpen","color","onClick","style","marginBottom","Collapse","Card","CardBody","erased","CalendarComponent","Date","date","setDate","TogleCalend","MyData","getDeletData","deletedList","event","checked","map","deleted","Table","scope","_id","list","outline","addon","renderList","mapDelete","selected","delete","App","CardTitle","tag","CardSubtitle","CardText","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d03ea102.chunk.js","sourcesContent":["//action creators\nimport axios from \"axios\";\n\nexport const fetchData = () => async dispatch => {\n    const response = await axios.get('http://localhost:8080/api');\n    dispatch({ type: 'FETCH_DATA', payload: response.data });\n    //  console.log(response);\n};\n\nexport const selectItem = (item) => {\n    //return an ction\n    return {\n        type: 'ITEM_SELECTED',\n        payload: item\n\n    }\n\n}\n\n\n","import React from 'react';\nimport { Button, Form, Input } from 'reactstrap';\nimport { BsPlusCircle } from \"react-icons/bs\";\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { fetchData } from '../redux/actions';\nimport { selectItem } from '../redux/actions';\n\nclass TodoForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            task: \"\"\n        };\n        this.handleTaskInputChange = this.handleTaskInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleTaskInputChange(e) {\n        this.setState({ task: e.target.value })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        //SERVERSENDS INPUT TO SERVER\n        const payload = {\n            body: this.state.task,\n        }\n        axios({\n            url: 'http://localhost:8080/api/save',\n            method: 'POST',\n            data: payload\n        })\n            .then(() => {\n                console.log(\"Data has been sent to the Sever\")\n                this.props.fetchData();\n                this.props.selectItem()\n            })\n            .catch(() => {\n                console.log(\"Data  NOT sent to the Sever\")\n\n            })\n        this.setState({ task: \"\" })\n\n    }\n    render() {\n        return (\n            <div className=\"d-flex justify-content-center shadow-lg  p-3 mb-3 bg-white rounded \">\n                <Form onSubmit={this.handleSubmit} className=\"form-control rounded \">\n                    <div className=\"container-fluid\">\n                        <div className=\"rov\">\n                            <div className=\"col\">\n                                <Input\n                                    placeholder=\"What To Do?\"\n                                    name=\"task\"\n                                    type=\"text\"\n                                    value={this.state.task}\n                                    autoComplete=\"off\"\n                                    onChange={this.handleTaskInputChange} />\n\n                                <div className=\"col \">\n\n                                    <Button\n                                        type=\"submit\"\n                                        className=\" form-control  mt-3 text-center rounded\"\n                                    ><BsPlusCircle /> Add To List</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(state)\n    //key dataFromServer initialized combinerReducers\n    return { dataFromServer: state.dataFromServer };\n}\n\nexport default connect(mapStateToProps, { fetchData, selectItem })(TodoForm);","import React, { useState } from 'react';\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\nimport { BsFolderCheck } from \"react-icons/bs\";\n\nconst DeleToggle = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    return (\n        <div className='p-3 mb-1 rounded '>\n            <Button color=\"outline-dark\" onClick={toggle} style={{ marginBottom: '1rem' }} className=\"text-center \"><BsFolderCheck /> Task History</Button>\n            <Collapse isOpen={isOpen}>\n                <Card>\n                    <CardBody>\n                        {props.erased}\n\n                    </CardBody>\n                </Card>\n            </Collapse>\n        </div>\n    );\n}\n\nexport default DeleToggle;","import React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nfunction CalendarComponent() {\n    const [date, setDate] = useState(new Date());\n    \n    const onChange = date => {\n        setDate(date)\n    }\n\n    return (\n        <div className=\"shadow-lg  p-1 mb-3 bg-white rounded\">\n            <Calendar\n                onChange={onChange}\n                value={date}\n                className=\"shadow-lg  p-1 mb-3 bg-white rounded w-100\"\n            />\n        </div>\n    );\n}\nexport default CalendarComponent;\n","import React, { useState } from 'react';\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\nimport { BsFillCalendarFill} from \"react-icons/bs\";\nimport CalendarComponent from './CalendarComponent'\nconst TogleCalend = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    return (\n        <div className=' p-3 mb-1 rounded'>\n            <Button color=\"outline-dark\" onClick={toggle} style={{ marginBottom: '1rem' }} className=\"text-center \"><BsFillCalendarFill /> Calendar</Button>\n            <Collapse isOpen={isOpen}>\n                <Card>\n                    <CardBody>\n                        <CalendarComponent/>\n                    </CardBody>\n                </Card>\n            </Collapse>\n        </div>\n    );\n}\n\nexport default TogleCalend;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchData, selectItem } from '../redux/actions';\nimport { Button, Input, Table } from 'reactstrap';\nimport { BsCheckBox, BsTrash } from \"react-icons/bs\";\nimport axios from 'axios';\nimport './Mydata.css';\nimport DeleToggle from \"./DeleToggle\";\nimport TogleCalend from './TogleCalend'\n\nclass MyData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            deletedList: [],\n        };\n        this.handleTaskInputChange = this.handleTaskInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    handleTaskInputChange(event) {\n        const target = event.target;\n        const name = target.name;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n\n        this.setState({\n            [name]: value\n        });\n\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n    }\n\n    componentDidMount() {\n        //function from actions\n        this.props.fetchData();\n        //call deleletd data function\n        this.getDeletData();\n    }\n    //GET DELETED DATA FROM MONGOOSE\n    getDeletData = () => {\n        axios.get('http://localhost:8080/api/delete')\n            .then((response) => {\n                // console.log(response.data)\n                this.setState({ deletedList: response.data })\n                console.log(\"Deleted Data has been received\")\n            })\n            .catch(() => {\n                console.log(\" Deleted Data  NOT  received\")\n            })\n    }\n    mapDelete() {\n        return this.state.deletedList.map(deleted => {\n\n            return <div key={deleted._id}>\n                <ul>\n                    <li>\n                        <Table>\n                            <thead>\n                                <tr>\n                                    <th> Created</th>\n                                    <th> Task</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr className=\"shadow-lg  p-1 mb-1 bg-white rounded\">\n                                    <th scope=\"row\" className='text-muted bg-dark text-light '>{deleted.date}</th>\n                                    <td className=' '>  {deleted.body} </td>\n                                    <td>  <BsCheckBox className=\"text-danger\" /></td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </li>\n                </ul>\n            </div>\n        })\n    }\n    renderList() {\n        return this.props.dataFromServer.map(list => {\n            return (<div key={list._id} className=\"border-bottom p-1 container-fluid\" >\n                <div className=\"row\">\n                    <div className=\" col-lg-12  d-flex justify-content-end\">\n                        <form>\n                            <Button type=\"submit\" className=\"float-right\" outline color=\"danger\" onClick={() => this.props.selectItem(list)}>Delete <BsTrash /></Button>\n                        </form>\n                    </div>\n                    <div className=\"col-sm-12 d-flex justify-content-start\">\n                        <Input addon type=\"checkbox\" value={list._id} className=\"ml-0\" />\n                        <p key={list.body}>{list.body}</p>\n                    </div>\n                    <div className=\"col d-flex justify-content-start\">\n                        <p>{list.date}</p>\n                    </div>\n                </div>\n            </div>\n            )\n        });\n    }\n\n    render() {\n        // console.log(this.props.dataFromServer);\n        return (<div className=\"container-fluid \">\n            <div className=\"row\">\n                <div className=\"col-sm-6 shadow-lg  p-1 mb-2 bg-white rounded \">\n\n                    {this.renderList()}\n\n                </div>\n                <div className=\"col-sm-6\">\n                    <div className=\" shadow-lg  p-1 mb-3 rounded  \">\n                        <div className='d-flex  '>\n                            <DeleToggle erased={this.mapDelete()} />\n                        </div>\n                        <div className=' '>\n                            <TogleCalend />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\n//getting all of the Data from the store map through and return it as props\nconst mapStateToProps = (state) => {\n    //    console.log(state)\n    //key dataFromServer initialized combinerReducers\n    return { dataFromServer: state.dataFromServer };\n}\n\nexport default connect(mapStateToProps, { fetchData, selectItem })(MyData);","import React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { selectItem } from '../redux/actions';\n\nconst Selected = ({ selected }) => {\n\n    const payload = {\n        delete: selected,\n    }\n\n    //SAVE DATA SELECTED API DELETE\n    axios({\n        url: 'http://localhost:8080/api/delete',\n        method: 'POST',\n        data: payload\n    })\n        .then(() => {\n            console.log(\"Data has been sent to the Sever\")\n        })\n        .catch(() => {\n            console.log(\"Delete Data  NOT sent to the Sever\");\n\n\n        });\n\n    //SAVE DATA SELECTED to API DELETE\n    axios({\n        url: 'http://localhost:8080/api/save',\n        method: 'POST',\n        data: payload\n    })\n        .then(() => {\n            console.log(\"Data has been sent to the Sever\")\n\n        })\n        .catch(() => {\n            console.log(\"Delete Data  NOT sent to the Sever\")\n\n        });\n    \n    if (!selected) {\n        return <div> </div>\n    }\n    return (\n        <div className=\"\" >\n\n        </div>\n    );\n\n}\nconst mapStateToProps = (state) => {\n    return {\n        selected: state.selected\n    }\n}\n\nexport default connect(mapStateToProps, { selectItem })(Selected);\n\n","\nimport React from 'react';\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\nimport { BsListTask } from \"react-icons/bs\";\n\nimport TodoForm from './components/TodoForm';\nimport MyData from './components/MyData';\nimport Selected from './components/Selected';\n\n\nfunction App() {\n  return (\n    <div className=\"d-flex justify-content-center container-fluid w-100\">\n      <div className=\"row  sm-w-50  mt-5 \">\n\n        <Card className=\"col-sm-12 col-md-12  w-100 \">\n          <CardBody>\n            <CardTitle tag=\"h5\" className=\" rounded text-center\"><BsListTask className=\"text-danger\" /> TO DO LIST</CardTitle>\n            <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n            </CardSubtitle>\n            <CardText className=\" \">\n            </CardText>\n\n            <TodoForm />\n\n            <div className=\"row\">\n              <div className=\"col-sm-12 \">\n                <MyData />\n              </div>\n\n              <div className=\"col mt-4\">\n                <Selected />\n              </div>\n\n            </div>\n          </CardBody>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","\nimport { combineReducers } from 'redux';\nimport SerVdataReducer from './SerVdataReducer';\nimport selectedList from './SelectedList'\n\n\nexport default combineReducers({\n    dataFromServer: SerVdataReducer,\n    selected: selectedList\n\n});","// eslint-disable-next-line\nexport default (state = [], action) => {\n    switch (action.type) {\n        case 'FETCH_DATA':\n            return action.payload;\n        default:\n            return state;\n    }\n};    ","\n// eslint-disable-next-line\nexport default (state = null, action) => { \n    if (action.type === \"ITEM_SELECTED\") {\n        return action.payload;\n    }\n    return state\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport reducers from './redux/reducers/index';\nimport thunk from 'redux-thunk';\n\nconst store= createStore(reducers, applyMiddleware(thunk))\n  ReactDOM.render(\n    <Provider store={store} >\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n"],"sourceRoot":""}